webpackHotUpdate("main",{

/***/ "./src/tutorial.js":
/*!*************************!*\
  !*** ./src/tutorial.js ***!
  \*************************/
/*! exports provided: Tutorial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tutorial\", function() { return Tutorial; });\n/* harmony import */ var _tutorial_step__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tutorial_step */ \"./src/tutorial_step.js\");\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! blockly/core */ \"./node_modules/blockly/dist/core-browser.js\");\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(blockly_core__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var micromodal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromodal */ \"./node_modules/micromodal/dist/micromodal.es.js\");\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Multi-step tutorial using modals.\n */\n\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n/**\n * A multi-step tutorial for the accessible music game.\n */\n\nvar Tutorial = /*#__PURE__*/function () {\n  /**\n   * Class for a tutorial.\n   * @param {Blockly.WorkspaceSvg} workspace The workspace the user\n   *     will interact with.\n   * @constructor\n   */\n  function Tutorial(workspace) {\n    var _this = this;\n\n    _classCallCheck(this, Tutorial);\n\n    /**\n     * The id of the modal.\n     * @type {string}\n     */\n    this.modalId = 'tutorialModal';\n    /**\n     * The id of the tutorial text.\n     * @type {string}\n     */\n\n    this.stepTextId = this.modalId + 'Text';\n    /**\n     * The id of the next step button.\n     * @type {string}\n     */\n\n    this.stepButtonId = this.modalId + 'StepBtn';\n    /**\n     * The id of the hide modal button.\n     * @type {string}\n     */\n\n    this.hideButtonId = this.modalId + 'HideBtn';\n    /**\n     * An array of steps in the tutorial.\n     * @type {Array<!TutorialStep>}\n     */\n\n    this.steps = Tutorial.STEP_OBJECTS.map(function (obj) {\n      return new _tutorial_step__WEBPACK_IMPORTED_MODULE_0__[\"TutorialStep\"](obj.text, _this.stepTextId, _this.nextStep);\n    });\n    /**\n     * The index of the currently active step.\n     * @type {number}\n     */\n\n    this.curStepIndex = 0;\n    /**\n     * The currently active step.\n     * @type {TutorialStep}\n     */\n\n    this.curStep = this.steps[this.curStepIndex];\n    /**\n     * The Blockly workspace the user will interact with.\n     * @type {Blockly.WorkspaceSvg}\n     */\n\n    this.workspace = workspace;\n    this.curNode = null;\n  }\n  /**\n   * Initialize DOM and show.\n   */\n\n\n  _createClass(Tutorial, [{\n    key: \"init\",\n    value: function init() {\n      this.createDom();\n      this.addCallbacks();\n      blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.navigation.enableKeyboardAccessibility();\n      micromodal__WEBPACK_IMPORTED_MODULE_2__[\"default\"].show(this.modalId);\n      this.curStep.show();\n    }\n    /**\n     * Display the next step, or end the tutorial if there are no more steps.\n     */\n\n  }, {\n    key: \"nextStep\",\n    value: function nextStep() {\n      this.curStepIndex++;\n\n      if (this.curStepIndex < this.steps.length) {\n        this.curStep = this.steps[this.curStepIndex];\n        micromodal__WEBPACK_IMPORTED_MODULE_2__[\"default\"].show(this.modalId);\n        this.curStep.show();\n        this.stashCursor();\n      } else {\n        this.done();\n      }\n    }\n    /**\n     * End the tutorial.\n     */\n\n  }, {\n    key: \"done\",\n    value: function done() {\n      micromodal__WEBPACK_IMPORTED_MODULE_2__[\"default\"].close(this.modalId);\n    }\n  }, {\n    key: \"stashCursor\",\n    value: function stashCursor() {\n      this.curNode = this.workspace.getCursor().getCurNode(); //Blockly.navigation.disableKeyboardAccessibility();\n    }\n  }, {\n    key: \"popCursor\",\n    value: function popCursor() {//Blockly.navigation.enableKeyboardAccessibility();\n      // if (this.curNode) {\n      //   this.workspace.getCursor().setCurNode(this.curNode);\n      // }\n    }\n    /**\n     * Add necessary handlers for any buttons on the modal.\n     */\n\n  }, {\n    key: \"addCallbacks\",\n    value: function addCallbacks() {\n      var _this2 = this;\n\n      document.getElementById(this.stepButtonId).addEventListener('click', function () {\n        _this2.nextStep();\n      });\n      document.getElementById(this.hideButtonId).addEventListener('click', function (e) {\n        micromodal__WEBPACK_IMPORTED_MODULE_2__[\"default\"].close(_this2.modalId);\n\n        _this2.popCursor();\n\n        Tutorial.STEP_OBJECTS[_this2.curStepIndex].onStart(_this2);\n\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    /**\n     * Create the dom for the modal.\n     */\n\n  }, {\n    key: \"createDom\",\n    value: function createDom() {\n      document.getElementById(this.modalId).innerHTML = \"\\n     <div class=\\\"modal__overlay\\\" tabindex=\\\"-1\\\" data-micromodal-close>\\n      <div class=\\\"modal__container\\\" role=\\\"dialog\\\" aria-modal=\\\"true\\\"\\n        aria-labelledby=\\\"modal-1-title\\\">\\n        <header class=\\\"modal__header\\\">\\n          <button class=\\\"modal__close\\\" aria-label=\\\"Close modal\\\"\\n            id=\\\"tutorialCloseBtn\\\" data-micromodal-close></button>\\n        </header>\\n        <main class=\\\"modal__content\\\" id=\\\"modal-1-content\\\">\\n          <h2 class=\\\"modal__title\\\" id=\\\"\".concat(this.stepTextId, \"\\\"></h2>\\n        </main>\\n        <footer class=\\\"modal__footer\\\">\\n          <button class=\\\"modal__btn modal__btn-primary\\\" aria-label=\\\"Hide modal\\\"\\n            id=\\\"\").concat(this.hideButtonId, \"\\\">Hide modal</button>\\n          <button class=\\\"modal__btn modal__btn-primary\\\" aria-label=\\\"Next step\\\"\\n            id=\\\"\").concat(this.stepButtonId, \"\\\">Next step</button>\\n        </footer>\\n      </div>\\n    </div>\");\n    }\n  }]);\n\n  return Tutorial;\n}();\nTutorial.STEPS_TEXT = ['Enable keyboard nav by pressing Cmd+Shift+K', 'Press X to navigate to the first stack of blocks', 'Press Y to navigate to the first block', 'Press enter to mark the first block'];\nTutorial.STEP_OBJECTS = [{\n  text: 'Hit enter to go to the workspace and hear a description of the first block.',\n  onStart: function onStart(tutorial) {\n    window.setTimeout(function () {\n      tutorial.nextStep();\n    }, 2000);\n\n    blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.navigation.registerToggleKeyboardNav = function () {\n      /** @type {!Blockly.ShortcutRegistry.KeyboardShortcut} */\n      var toggleKeyboardNavShortcut = {\n        name: blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.navigation.actionNames.TOGGLE_KEYBOARD_NAV,\n        callback: function callback(workspace) {\n          if (workspace.keyboardAccessibilityMode) {\n            blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.navigation.disableKeyboardAccessibility();\n          } else {\n            blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.navigation.enableKeyboardAccessibility();\n          }\n\n          return true;\n        }\n      };\n      var shortcutName = blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.navigation.actionNames.TOGGLE_KEYBOARD_NAV;\n      blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.ShortcutRegistry.registry.register(toggleKeyboardNavShortcut);\n      var ctrlShiftK = blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.ShortcutRegistry.registry.createSerializedKey(blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.utils.KeyCodes.K, [blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.utils.KeyCodes.CTRL, blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.utils.KeyCodes.SHIFT]);\n      blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.ShortcutRegistry.registry.removeKeyMapping(ctrlShiftK, shortcutName);\n    };\n  }\n}, {\n  text: 'Press the down arrow key to go to the first connection on the block.',\n  onStart: function onStart(tutorial) {\n    var oldShortcut = blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.ShortcutRegistry.registry.getKeyboardShortcuts(blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.utils.KeyCodes.DOWN)[0];\n    blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.ShortcutRegistry.registry.removeKeyMapping(blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.utils.KeyCodes.DOWN, oldShortcut); // Create a serialized key from the primary key and any modifiers.\n\n    var enableKey = blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.user.keyMap.createSerializedKey(blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.utils.KeyCodes.K, [blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.user.keyMap.modifierKeys.CONTROL, blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.user.keyMap.modifierKeys.SHIFT]);\n    var actionEnable = new blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.Action('topOfStack', 'Move cursor to top of stack');\n    blockly_core__WEBPACK_IMPORTED_MODULE_1___default.a.user.keyMap.setActionForKey(enableKey, actionEnable);\n    tutorial.nextStep();\n  }\n}]; // const keyCodeMappings = [\n//   [Blockly.utils.KeyCodes.UP, Blockly.navigation.actionNames.PREVIOUS],\n//   [Blockly.utils.KeyCodes.DOWN, Blockly.navigation.actionNames.NEXT],\n//   [Blockly.utils.KeyCodes.RIGHT, Blockly.navigation.actionNames.IN],\n//   [Blockly.utils.KeyCodes.LEFT, Blockly.navigation.actionNames.OUT]];\n// keyCodeMappings.forEach((mapping) => {\n//   if (register) {\n//     Blockly.ShortcutRegistry.registry.addKeyMapping(...mapping);\n//   } else {\n//     Blockly.ShortcutRegistry.registry.removeKeyMapping(...mapping);\n//   }\n// enableNavFn() {\n//   // // Create a serialized key from the primary key and any modifiers.\n//   // const enableKey = Blockly.user.keyMap.createSerializedKey(\n//   //     Blockly.utils.KeyCodes.K,\n//   //     [\n//   //       Blockly.user.keyMap.modifierKeys.CONTROL,\n//   //       Blockly.user.keyMap.modifierKeys.SHIFT,\n//   //     ]);\n//   // var actionEnable = new Blockly.Action('topOfStack', 'Move cursor to top of stack');\n//   // Blockly.user.keyMap.setActionForKey(enableKey, actionEnable);\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/tutorial.js\n");

/***/ })

})
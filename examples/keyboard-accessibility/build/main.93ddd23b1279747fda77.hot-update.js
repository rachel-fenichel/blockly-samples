webpackHotUpdate("main",{

/***/ "./src/field_pitch.js":
/*!****************************!*\
  !*** ./src/field_pitch.js ***!
  \****************************/
/*! exports provided: FieldPitch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FieldPitch\", function() { return FieldPitch; });\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! blockly/core */ \"./node_modules/blockly/dist/core-browser.js\");\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(blockly_core__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * @license\n * Copyright 2016 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Music pitch input field. Borrowed from Blockly Games.\n * @author fraser@google.com (Neil Fraser)\n * @author samelh@google.com (Sam El-Husseini)\n */\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n/**\n * Pitch field from Blockly Games music.\n * @extends {Blockly.FieldTextInput}\n */\n\nvar FieldPitch = /*#__PURE__*/function (_Blockly$FieldTextInp) {\n  _inherits(FieldPitch, _Blockly$FieldTextInp);\n\n  var _super = _createSuper(FieldPitch);\n\n  /**\n   * Class for an editable pitch field.\n   * @param {string} text The initial content of the field.\n   * @constructor\n   */\n  function FieldPitch(text) {\n    _classCallCheck(this, FieldPitch);\n\n    return _super.call(this, text);\n  }\n  /**\n   * Construct a FieldPitch from a JSON arg object.\n   * @param {!Object} options A JSON object with options (pitch).\n   * @return {!FieldPitch} The new field instance.\n   * @package\n   * @nocollapse\n   */\n\n\n  _createClass(FieldPitch, [{\n    key: \"showEditor_\",\n\n    /**\n     * Show the inline free-text editor on top of the text and the note picker.\n     * @private\n     */\n    value: function showEditor_() {\n      _get(_getPrototypeOf(FieldPitch.prototype), \"showEditor_\", this).call(this);\n\n      var div = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.WidgetDiv.DIV;\n\n      if (!div.firstChild) {\n        // Mobile interface uses Blockly.prompt.\n        return;\n      } // Build the DOM.\n\n\n      var editor = this.dropdownCreate_();\n      blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.DropDownDiv.getContentDiv().appendChild(editor);\n      blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.DropDownDiv.setColour(this.sourceBlock_.getColour(), this.sourceBlock_.style.colourTertiary);\n      blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.DropDownDiv.showPositionedByField(this, this.dropdownDispose_.bind(this)); // The note picker is different from other fields in that it updates on\n      // mousemove even if it's not in the middle of a drag.  In future we may\n      // change this behaviour.  For now, using bindEvent_ instead of\n      // bindEventWithChecks_ allows it to work without a mousedown/touchstart.\n\n      this.clickWrapper_ = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.bindEvent_(this.imageElement_, 'click', this, this.hide_);\n      this.moveWrapper_ = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.bindEvent_(this.imageElement_, 'mousemove', this, this.onMouseMove);\n      this.bindAdditionalInputEvents_(this.htmlInput_);\n      this.updateGraph_();\n    }\n    /**\n     * Create the pitch editor.\n     * @return {!Element} The newly created pitch picker.\n     * @private\n     */\n\n  }, {\n    key: \"dropdownCreate_\",\n    value: function dropdownCreate_() {\n      this.imageElement_ = document.createElement('div');\n      this.imageElement_.id = 'notePicker';\n      return this.imageElement_;\n    }\n    /**\n     * Dispose of events belonging to the pitch editor.\n     * @private\n     */\n\n  }, {\n    key: \"dropdownDispose_\",\n    value: function dropdownDispose_() {\n      blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.unbindEvent_(this.clickWrapper_);\n      blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.unbindEvent_(this.moveWrapper_);\n    }\n    /**\n     * Hide the editor.\n     * @private\n     */\n\n  }, {\n    key: \"hide_\",\n    value: function hide_() {\n      blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.WidgetDiv.hide();\n      blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.DropDownDiv.hideWithoutAnimation();\n    }\n    /**\n     * Set the note to match the mouse's position.\n     * @param {!Event} e Mouse move event.\n     */\n\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(e) {\n      var bBox = this.imageElement_.getBoundingClientRect();\n      var dy = e.clientY - bBox.top;\n      var note = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.utils.math.clamp(Math.round(13.5 - dy / 7.5), 0, 12);\n      this.imageElement_.style.backgroundPosition = -note * 37 + 'px 0';\n      this.setEditorValue_(this.valueToNote(note));\n    }\n    /**\n     * Convert the machine-readable value (0-12) to human-readable text (C3-A4).\n     * @param {number|string} value The provided value.\n     * @return {string|undefined} The respective note, or undefined if invalid.\n     */\n\n  }, {\n    key: \"valueToNote\",\n    value: function valueToNote(value) {\n      return FieldPitch.NOTES[Number(value)];\n    }\n    /**\n     * Convert the human-readable text (C3-A4) to machine-readable value (0-12).\n     * @param {string} text The provided note.\n     * @return {number|undefined} The respective value, or undefined if invalid.\n     */\n\n  }, {\n    key: \"noteToValue\",\n    value: function noteToValue(text) {\n      var normalizedText = text.trim().toUpperCase();\n      var i = FieldPitch.NOTES.indexOf(normalizedText);\n      return i > -1 ? i : undefined;\n    }\n    /**\n     * Updates the graph when the field rerenders.\n     * @private\n     * @override\n     */\n\n  }, {\n    key: \"render_\",\n    value: function render_() {\n      _get(_getPrototypeOf(FieldPitch.prototype), \"render_\", this).call(this);\n\n      this.updateGraph_();\n    }\n    /**\n     * Redraw the note picker with the current note.\n     * @private\n     */\n\n  }, {\n    key: \"updateGraph_\",\n    value: function updateGraph_() {\n      if (!this.imageElement_) {\n        return;\n      }\n\n      var i = this.noteToValue(this.getValue());\n      this.imageElement_.style.backgroundPosition = -i * 37 + 'px 0';\n    }\n    /**\n     * Ensure that only a valid value may be entered.\n     * @param {*} opt_newValue The input value.\n     * @return {*} A valid value, or null if invalid.\n     */\n\n  }, {\n    key: \"doClassValidation_\",\n    value: function doClassValidation_(opt_newValue) {\n      if (opt_newValue === null || opt_newValue === undefined) {\n        return null;\n      }\n\n      var noteNum = this.noteToValue(opt_newValue);\n\n      if (noteNum && this.valueToNote(noteNum) == opt_newValue) {\n        return opt_newValue;\n      }\n\n      return null;\n    }\n    /**\n     * Select a note one higher than current, or stay at the highest note.\n     */\n\n  }, {\n    key: \"selectHigherNote\",\n    value: function selectHigherNote() {\n      var note = Math.min(this.getValue() + 1, 12);\n      this.setEditorValue_(note);\n    }\n    /**\n     * Select a note one lower than current, or stay at the lowest note.\n     */\n\n  }, {\n    key: \"selectLowerNote\",\n    value: function selectLowerNote() {\n      var note = Math.max(this.getValue() - 1, 0);\n      this.setEditorValue_(note);\n    }\n    /**\n     * Handles next/previous key presses on the input event.\n     * OnBlocklyAction would normally receive next/previous actions,\n     * but the html input element is capturing the keypresses.\n     * We bind our own event that only handles keys registered to next/previous.\n     * If we handle it, we stop other handlers from firing.\n     * This does not clobber the events registered by FieldTextInput, so\n     * esc and enter presses are still handled by that.\n     * @param {!Event} e Keyboard event.\n     */\n\n  }, {\n    key: \"handleKeyPress_\",\n    value: function handleKeyPress_(e) {\n      var action = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.ShortcutRegistry.registry.getKeyboardShortcuts(e.keyCode);\n      var handled = false;\n\n      if (action.includes('next')) {\n        this.selectLowerNote();\n        handled = true;\n      } else if (action.includes('previous')) {\n        this.selectHigherNote();\n        handled = true;\n      }\n\n      if (handled) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n    /**\n     * Bind handler for keypresses on input.\n     * @param {!HTMLElement} htmlInput Input element.\n     */\n\n  }, {\n    key: \"bindAdditionalInputEvents_\",\n    value: function bindAdditionalInputEvents_(htmlInput) {\n      this.additionalOnKeyDownWrapper_ = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.bindEventWithChecks_(htmlInput, 'keydown', this, this.handleKeyPress_);\n    }\n    /**\n     * Unbind handler for user input.\n     * @private\n     */\n\n  }, {\n    key: \"unbindAdditionalInputEvents_\",\n    value: function unbindAdditionalInputEvents_() {\n      if (this.additionalOnKeyDownWrapper_) {\n        blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.unbindEvent_(this.additionalOnKeyDownWrapper_);\n        this.additionalOnKeyDownWrapper_ = null;\n      }\n    }\n    /**\n     * Dispose of event handlers.\n     * @override\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unbindAdditionalInputEvents_();\n\n      _get(_getPrototypeOf(FieldPitch.prototype), \"dispose\", this).call(this);\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(options) {\n      return new FieldPitch(options['pitch']);\n    }\n  }]);\n\n  return FieldPitch;\n}(blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.FieldTextInput);\n/**\n * All notes available for the picker.\n */\n\nFieldPitch.NOTES = 'C3 D3 E3 F3 G3 A3 B3 C4 D4 E4 F4 G4 A4'.split(/ /);\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.fieldRegistry.register('field_pitch', FieldPitch);\n/**\n * CSS for the pitch field.\n * This field is using CSS to set a background image of a series of notes, then\n * translating left or right to show only the correct note.\n */\n\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.Css.register([\n/* eslint-disable indent */\n\"#notePicker {\\n    background-image: url(https://raw.githubusercontent.com/google/blockly-games/master/appengine/music/notes.png);\\n    border: 1px solid #ccc;\\n    height: 109px;\\n    width: 46px;\\n  }\"\n/* eslint-enable indent */\n]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/field_pitch.js\n");

/***/ }),

/***/ "./src/music.js":
/*!**********************!*\
  !*** ./src/music.js ***!
  \**********************/
/*! exports provided: Music */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Music\", function() { return Music; });\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! blockly/core */ \"./node_modules/blockly/dist/core-browser.js\");\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(blockly_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _speaker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./speaker */ \"./src/speaker.js\");\n/* harmony import */ var _music_blocks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./music_blocks */ \"./src/music_blocks.js\");\n/* harmony import */ var _line_cursor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./line_cursor */ \"./src/line_cursor.js\");\n/* harmony import */ var _music_block_generators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./music_block_generators */ \"./src/music_block_generators.js\");\n!(function webpackMissingModule() { var e = new Error(\"Cannot find module 'js-interpreter'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n/* harmony import */ var _note_player__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./note_player */ \"./src/note_player.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Game logic for music game.\n */\n\n\n\n\n\n\n\n/**\n * Constant denoting a rest.\n */\n\nvar REST = 'REST';\n\nvar Stave = /*#__PURE__*/function () {\n  function Stave(id, stateStack) {\n    _classCallCheck(this, Stave);\n\n    /**\n     * The id.\n     * @type {number}\n     */\n    this.id = id;\n    /**\n     * The state stack.\n     * @type {Array<Interpreter.State>}\n     */\n\n    this.stateStack = stateStack;\n    /**\n     * Whether all the notes have ben played.\n     * @type {boolean}\n     */\n\n    this.done = false;\n    /**\n     * The time to pause till.\n     * @type {number}\n     * @private\n     */\n\n    this.pauseUntil64ths_ = 0;\n    /**\n     * The transcript of notes played.\n     * @type {Array<string|number>}\n     * @private\n     */\n\n    this.transcript_ = [];\n    /**\n     * Currently playing note.\n     * @type {string}\n     * @private\n     */\n\n    this.note_ = '';\n  }\n  /**\n   * Whether this stave is currently paused.\n   * @param {number} clock64ths Number of 1/64ths notes since the start.\n   * @return {boolean} Whether this stave is paused.\n   */\n\n\n  _createClass(Stave, [{\n    key: \"isPaused\",\n    value: function isPaused(clock64ths) {\n      return this.pauseUntil64ths_ > clock64ths;\n    }\n    /**\n     * Play one note.\n     * @param {number} duration Fraction of a whole note length to play.\n     * @param {string} pitch Note to play.\n     * @param {number} clock64ths Number of 1/64ths notes since the start.\n     */\n\n  }, {\n    key: \"play\",\n    value: function play(duration, pitch, clock64ths) {\n      this.stopSound();\n      this.note_ = pitch;\n      _note_player__WEBPACK_IMPORTED_MODULE_6__[\"notePlayer\"].triggerAttack(pitch);\n      this.pauseUntil64ths_ = duration * 64 + clock64ths; // Make a record of this note.\n\n      this.transcript_.push(pitch, duration);\n    }\n    /**\n     * Wait one rest.\n     * @param {number} duration Fraction of a whole note length to rest.\n     * @param {number} clock64ths Number of 1/64ths notes since the start.\n     */\n\n  }, {\n    key: \"rest\",\n    value: function rest(duration, clock64ths) {\n      this.stopSound();\n      this.pauseUntil64ths_ = duration * 64 + clock64ths; // Make a record of this rest.\n\n      var transcriptLen = this.transcript_.length;\n\n      if (transcriptLen > 1 && this.transcript_[transcriptLen - 2] === REST) {\n        // Concatenate this rest with previous one.\n        this.transcript_[transcriptLen - 1] += duration;\n      } else {\n        this.transcript_.push(REST, duration);\n      }\n    }\n    /**\n     * Stops currently playing note.\n     */\n\n  }, {\n    key: \"stopSound\",\n    value: function stopSound() {\n      if (this.note_) {\n        _note_player__WEBPACK_IMPORTED_MODULE_6__[\"notePlayer\"].triggerRelease();\n        this.note_ = '';\n      }\n    }\n    /**\n     * Returns whether the transcript matched expected.\n     * @param {Array<string|number>} expectedTranscript The expected transcript.\n     * @return {boolean} Whether the transcript matches.\n     */\n\n  }, {\n    key: \"checkTranscript\",\n    value: function checkTranscript(expectedTranscript) {\n      return JSON.stringify(expectedTranscript) === JSON.stringify(this.transcript_);\n    }\n  }]);\n\n  return Stave;\n}();\n/**\n * Game logic for music game.\n */\n\n\nvar Music = /*#__PURE__*/function () {\n  /**\n   * Class for a music game.\n   * @constructor\n   */\n  function Music() {\n    _classCallCheck(this, Music);\n\n    /**\n     * The Blockly workspace associated with this game.\n     * @type {!Blockly.WorkspaceSvg}\n     */\n    this.workspace = this.createWorkspace_();\n    /**\n     * The currently loaded level. 0 if no level loaded.\n     */\n\n    this.level = 0;\n    /**\n     * The HTML element containing the goal text for the game.\n     * @type {HTMLElement}\n     * @private\n     */\n\n    this.goalTextElement_ = document.getElementById('goalText');\n    /**\n     * The expected answer.\n     * @type {Array<Array<string|number>>}\n     * @private\n     */\n\n    this.expectedAnswer_ = [[]];\n    /**\n     * The interpreter.\n     * @type {?Interpreter}\n     * @private\n     */\n\n    this.interpreter_ = null;\n    /**\n     * @type {Array<Stave>}\n     * @private\n     */\n\n    this.staves_ = [];\n    /**\n     * The current active stave.\n     * @type {?Stave}\n     * @private\n     */\n\n    this.activeStave_ = null;\n    /**\n     * Time of start of execution.\n     * @type {number}\n     * @private\n     */\n\n    this.startTime_ = 0;\n    /**\n     * Number of 1/64ths notes since the start.\n     * @type {number}\n     * @private\n     */\n\n    this.clock64ths_ = 0;\n    /**\n     * The speed at which to play notes. Between 0 and 1, with 0 being slow,\n     * 0.5 being normal speed, and 1 being fast.\n     * @type {number}\n     * @private\n     */\n\n    this.speed_ = 0.5;\n  }\n  /**\n   * Initializes the Blockly workspace.\n   * @return {!Blockly.WorkspaceSvg} The Blockly workspace.\n   * @private\n   */\n\n\n  _createClass(Music, [{\n    key: \"createWorkspace_\",\n    value: function createWorkspace_() {\n      // Initialize Blockly workspace.\n      var blocklyDiv = document.getElementById('blocklyDiv');\n      var workspace = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.inject(blocklyDiv, {\n        toolbox: _music_blocks__WEBPACK_IMPORTED_MODULE_2__[\"toolboxPitch\"]\n      });\n      blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.ASTNode.NAVIGATE_ALL_FIELDS = true;\n      workspace.getMarkerManager().setCursor(new _line_cursor__WEBPACK_IMPORTED_MODULE_3__[\"LineCursor\"]());\n      workspace.addChangeListener(function (event) {\n        return _speaker__WEBPACK_IMPORTED_MODULE_1__[\"speaker\"].nodeToSpeech(event);\n      });\n      workspace.getFlyout().getWorkspace().addChangeListener(function (event) {\n        return _speaker__WEBPACK_IMPORTED_MODULE_1__[\"speaker\"].nodeToSpeech(event);\n      });\n      return workspace;\n    }\n    /**\n     * Sets the goal text.\n     * @param {string} text The text to set the goal to.\n     */\n\n  }, {\n    key: \"setGoalText\",\n    value: function setGoalText(text) {\n      this.goalTextElement_.innerHTML = text;\n    }\n    /**\n     * Update the goal based on the current level.\n     * @private\n     */\n\n  }, {\n    key: \"updateGoal_\",\n    value: function updateGoal_() {\n      var goalText = '';\n\n      switch (this.level) {\n        case 1:\n          goalText = 'Play c4 d4 e4 c4';\n          this.expectedAnswer_ = [['C4', 0.25, 'D4', 0.25, 'E4', 0.25, 'C4', 0.25]];\n          break;\n      }\n\n      this.setGoalText(goalText);\n    }\n    /**\n     * Update the toolbox based on the current level.\n     * @private\n     */\n\n  }, {\n    key: \"updateToolbox_\",\n    value: function updateToolbox_() {\n      var toolboxJson = _music_blocks__WEBPACK_IMPORTED_MODULE_2__[\"toolboxPitch\"]; // Use toolboxPitch as default.\n\n      if (this.level < 6) {\n        toolboxJson = {\n          'kind': 'flyoutToolbox',\n          'contents': [{\n            'kind': 'block',\n            'type': 'pitch_test'\n          }, {\n            'kind': 'block',\n            'type': 'music_pitch'\n          }, {\n            'kind': 'block',\n            'type': 'music_note'\n          }, {\n            'kind': 'block',\n            'type': 'music_rest_whole'\n          }, {\n            'kind': 'block',\n            'type': 'music_rest'\n          }, {\n            'kind': 'block',\n            'type': 'music_instrument'\n          }]\n        };\n      }\n\n      this.workspace.updateToolbox(toolboxJson);\n    }\n    /**\n     * Update the workspace blocks based on the current level.\n     * @private\n     */\n\n  }, {\n    key: \"loadLevelBlocks_\",\n    value: function loadLevelBlocks_() {\n      this.workspace.clear();\n      var levelXml = '';\n\n      if (this.level === 2) {\n        levelXml = \"<xml>\\n            <block type=\\\"music_start\\\" deletable=\\\"false\\\" x=\\\"180\\\"\\n            y=\\\"50\\\">\\n              <statement name=\\\"STACK\\\">\\n                <block type=\\\"music_note\\\">\\n                  <field name=\\\"DURATION\\\">0.25</field>\\n                  <value name=\\\"PITCH\\\">\\n                    <shadow type=\\\"music_pitch\\\">\\n                      <field name=\\\"PITCH\\\">C4</field>\\n                    </shadow>\\n                  </value>\\n                  <next>\\n                    <block type=\\\"music_note\\\">\\n                      <field name=\\\"DURATION\\\">0.25</field>\\n                      <value name=\\\"PITCH\\\">\\n                        <shadow type=\\\"music_pitch\\\">\\n                          <field name=\\\"PITCH\\\">D4</field>\\n                        </shadow>\\n                      </value>\\n                      <next>\\n                        <block type=\\\"music_note\\\">\\n                          <field name=\\\"DURATION\\\">0.25</field>\\n                          <value name=\\\"PITCH\\\">\\n                            <shadow type=\\\"music_pitch\\\">\\n                              <field name=\\\"PITCH\\\">E4</field>\\n                            </shadow>\\n                          </value>\\n                          <next>\\n                            <block type=\\\"music_note\\\">\\n                              <field name=\\\"DURATION\\\">0.25</field>\\n                              <value name=\\\"PITCH\\\">\\n                                <shadow type=\\\"music_pitch\\\">\\n                                  <field name=\\\"PITCH\\\">C4</field>\\n                                </shadow>\\n                              </value>\\n                            </block>\\n                          </next>\\n                        </block>\\n                      </next>\\n                    </block>\\n                  </next>\\n                </block>\\n              </statement>\\n            </block>\\n          </xml>\";\n      } else if (this.level < 6) {\n        levelXml = \"<xml>\\n            <block type=\\\"music_start\\\" deletable=\\\"\".concat(this.level > 6, \"\\\" x=\\\"180\\\"\\n            y=\\\"50\\\"></block>\\n          </xml>\");\n      }\n\n      if (levelXml) {\n        blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.Xml.domToWorkspace(blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.Xml.textToDom(levelXml), this.workspace);\n      }\n    }\n    /**\n     * Load the specified level.\n     * @param {number|string} level The level to load.\n     */\n\n  }, {\n    key: \"loadLevel\",\n    value: function loadLevel(level) {\n      this.level = Number(level);\n      this.updateGoal_();\n      this.updateToolbox_();\n      this.loadLevelBlocks_();\n    }\n    /**\n     * Generates code and logs it to the console.\n     */\n\n  }, {\n    key: \"logGeneratedCode\",\n    value: function logGeneratedCode() {\n      var codeJs = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.workspaceToCode(this.workspace);\n      console.log(codeJs);\n    }\n    /**\n     * Evaluates whether the answer for the currently loaded level is correct.\n     * @return {boolean} Whether the answer is correct.\n     */\n\n  }, {\n    key: \"checkAnswer_\",\n    value: function checkAnswer_() {\n      var correct = true;\n\n      for (var i = 0; i < this.expectedAnswer_.length; i++) {\n        if (!this.staves_[i].checkTranscript(this.expectedAnswer_[i])) {\n          correct = false;\n          break;\n        }\n      }\n\n      return correct;\n    }\n    /**\n     * Play one note.\n     * @param {number} duration Fraction of a whole note length to play.\n     * @param {string} pitch Note play.\n     */\n\n  }, {\n    key: \"play_\",\n    value: function play_(duration, pitch) {\n      this.activeStave_.play(duration, pitch, this.clock64ths_);\n    }\n    /**\n     * Wait one rest.\n     * @param {number} duration Fraction of a whole note length to rest.\n     */\n\n  }, {\n    key: \"rest_\",\n    value: function rest_(duration) {\n      this.activeStave_.rest(duration, this.clock64ths_);\n    }\n    /**\n     * Inject the Music API into a JavaScript interpreter.\n     * @param {!Interpreter} interpreter The JS-Interpreter.\n     * @param {!Interpreter.Object} globalObject Global object.\n     */\n\n  }, {\n    key: \"interpreterInit_\",\n    value: function interpreterInit_(interpreter, globalObject) {\n      var _this = this;\n\n      // API\n      var wrapper;\n\n      wrapper = function wrapper(duration, pitch, _id) {\n        _this.play_(duration, pitch);\n      };\n\n      interpreter.setProperty(globalObject, 'play', interpreter.createNativeFunction(wrapper));\n\n      wrapper = function wrapper(duration, _id) {\n        _this.rest_(duration);\n      };\n\n      interpreter.setProperty(globalObject, 'rest', interpreter.createNativeFunction(wrapper)); // TODO implement changing instrument.\n      // wrapper = function(instrument, id) {\n      //   Music.setInstrument(instrument, id);\n      // };\n      // interpreter.setProperty(globalObject, 'setInstrument',\n      //     interpreter.createNativeFunction(wrapper));\n    }\n    /**\n     * Execute a bite-sized chunk of the user's code.\n     * @param {Stave} stave The stave to execute.\n     */\n\n  }, {\n    key: \"executeChunk_\",\n    value: function executeChunk_(stave) {\n      this.activeStave_ = stave; // Switch the interpreter to run the provided staff.\n\n      this.interpreter_.stateStack = stave.stateStack;\n      var ticks = 10000;\n      var go;\n\n      do {\n        try {\n          go = this.interpreter_.step();\n        } catch (e) {\n          // User error, terminate in shame.\n          alert(e);\n          go = false;\n        }\n\n        if (ticks-- == 0) {\n          console.warn('Staff ' + stave.id + ' is running slowly.');\n          return;\n        }\n\n        if (stave.isPaused(this.clock64ths_)) {\n          // Previously executed command (play or rest) requested a pause.\n          return;\n        }\n      } while (go); // Thread complete.  Wrap up.\n\n\n      stave.stopSound(stave);\n      stave.done = true;\n    }\n    /**\n     * Set the speed (Number between 0 and 1).\n     * @param {number} speed The speed to set to.\n     */\n\n  }, {\n    key: \"setSpeed\",\n    value: function setSpeed(speed) {\n      if (speed <= 0 || speed > 1) {\n        console.error('Invalid speed');\n        return;\n      }\n\n      this.speed_ = speed;\n      this.startTime_ = 0;\n    }\n    /**\n     * Execute a 1/64th tick of the program.\n     * @private\n     */\n\n  }, {\n    key: \"tick_\",\n    value: function tick_() {\n      var _this2 = this;\n\n      // Delay between start of each beat (1/64ths of a whole note).\n      // Reminder: The startTime_ should be reset after the slider is adjusted.\n      var scaleDuration = 1000 * (2.5 - 2 * this.speed_) / 64;\n\n      if (!this.startTime_) {\n        // Either the first tick, or first tick after slider was adjusted.\n        this.startTime_ = Date.now() - this.clock64ths_ * scaleDuration;\n      }\n\n      var done = true;\n      this.staves_.forEach(function (stave) {\n        if (!stave.done) {\n          done = false;\n\n          if (!stave.isPaused(_this2.clock64ths_)) {\n            _this2.executeChunk_(stave);\n          }\n        }\n      });\n\n      if (done) {\n        // Program complete.\n        if (this.checkAnswer_()) {\n          console.log('CORRECT');\n        } else {\n          console.log('INCORRECT');\n        }\n      } else {\n        this.clock64ths_++;\n        var ms = this.startTime_ + this.clock64ths_ * scaleDuration - Date.now();\n        this.pid = setTimeout(function () {\n          return _this2.tick_();\n        }, ms);\n      }\n    }\n    /**\n     * Reset the music to the start position, clear the display, and kill any\n     * pending tasks.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      // Kill any task.\n      clearTimeout(this.pid);\n      this.staves_.forEach(function (stave) {\n        stave.stopSound();\n      });\n      this.interpreter_ = null;\n      this.activeStave_ = null;\n      this.staves_.length = 0;\n      this.clock64ths_ = 0;\n      this.startTime_ = 0;\n    }\n    /**\n     * Plays music based on the blocks on the workspace.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this3 = this;\n\n      this.reset(); // Get generated code from workspace\n\n      var code = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.workspaceToCode(this.workspace); // Run user code.\n\n      this.interpreter_ = new !(function webpackMissingModule() { var e = new Error(\"Cannot find module 'js-interpreter'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(code, this.interpreterInit_.bind(this)); // TODO support multiple threads\n      // Assume only one thread.\n\n      var interpreter = new !(function webpackMissingModule() { var e = new Error(\"Cannot find module 'js-interpreter'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(''); // Replace this thread's global scope with the cross-thread global.\n\n      interpreter.stateStack[0].scope = this.interpreter_.globalScope; // Add start call.\n\n      interpreter.appendCode('start();\\n');\n      this.staves_.push(new Stave(0, interpreter.stateStack));\n      setTimeout(function () {\n        return _this3.tick_();\n      }, 100);\n    }\n  }]);\n\n  return Music;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/music.js\n");

/***/ }),

/***/ "./src/music_block_generators.js":
/*!***************************************!*\
  !*** ./src/music_block_generators.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! blockly/core */ \"./node_modules/blockly/dist/core-browser.js\");\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(blockly_core__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview JavaScript generators for music blocks.\n */\n\n\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript['music_pitch'] = function (block) {\n  var code = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.quote_(block.getFieldValue('PITCH'));\n  return [code, blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.ORDER_ATOMIC];\n};\n\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript['music_note'] = function (block) {\n  var pitch = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.valueToCode(block, 'PITCH', blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.ORDER_NONE) || 'C4';\n  return 'play(' + Number(block.getFieldValue('DURATION')) + ', ' + pitch + ', \\'block_id_' + block.id + '\\');\\n';\n};\n\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript['music_rest_whole'] = function (block) {\n  return 'rest(1, \\'block_id_' + block.id + '\\');\\n';\n};\n\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript['music_rest'] = function (block) {\n  return 'rest(' + Number(block.getFieldValue('DURATION')) + ', \\'block_id_' + block.id + '\\');\\n';\n};\n\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript['music_instrument'] = function (block) {\n  var instrument = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.quote_(block.getFieldValue('INSTRUMENT'));\n  return 'setInstrument(' + instrument + ', \\'block_id_' + block.id + '\\');\\n';\n};\n\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript['music_start'] = function (block) {\n  var statementsStack = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.statementToCode(block, 'STACK');\n  var code = 'function start() {\\n' + statementsStack + '}\\n'; // Add % so as not to collide with helper functions in definitions list.\n\n  blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.JavaScript.definitions_['%start'] = code;\n  return null;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbXVzaWNfYmxvY2tfZ2VuZXJhdG9ycy5qcz8zZWM4Il0sIm5hbWVzIjpbIkJsb2NrbHkiLCJKYXZhU2NyaXB0IiwiYmxvY2siLCJjb2RlIiwicXVvdGVfIiwiZ2V0RmllbGRWYWx1ZSIsIk9SREVSX0FUT01JQyIsInBpdGNoIiwidmFsdWVUb0NvZGUiLCJPUkRFUl9OT05FIiwiTnVtYmVyIiwiaWQiLCJpbnN0cnVtZW50Iiwic3RhdGVtZW50c1N0YWNrIiwic3RhdGVtZW50VG9Db2RlIiwiZGVmaW5pdGlvbnNfIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBOztBQUVBQSxtREFBTyxDQUFDQyxVQUFSLENBQW1CLGFBQW5CLElBQW9DLFVBQVNDLEtBQVQsRUFBZ0I7QUFDbEQsTUFBTUMsSUFBSSxHQUFHSCxtREFBTyxDQUFDQyxVQUFSLENBQW1CRyxNQUFuQixDQUEwQkYsS0FBSyxDQUFDRyxhQUFOLENBQW9CLE9BQXBCLENBQTFCLENBQWI7QUFDQSxTQUFPLENBQUNGLElBQUQsRUFBT0gsbURBQU8sQ0FBQ0MsVUFBUixDQUFtQkssWUFBMUIsQ0FBUDtBQUNELENBSEQ7O0FBS0FOLG1EQUFPLENBQUNDLFVBQVIsQ0FBbUIsWUFBbkIsSUFBbUMsVUFBU0MsS0FBVCxFQUFnQjtBQUNqRCxNQUFNSyxLQUFLLEdBQUdQLG1EQUFPLENBQUNDLFVBQVIsQ0FBbUJPLFdBQW5CLENBQStCTixLQUEvQixFQUFzQyxPQUF0QyxFQUNWRixtREFBTyxDQUFDQyxVQUFSLENBQW1CUSxVQURULEtBQ3dCLElBRHRDO0FBRUEsU0FBTyxVQUFVQyxNQUFNLENBQUNSLEtBQUssQ0FBQ0csYUFBTixDQUFvQixVQUFwQixDQUFELENBQWhCLEdBQW9ELElBQXBELEdBQTJERSxLQUEzRCxHQUNILGVBREcsR0FDZUwsS0FBSyxDQUFDUyxFQURyQixHQUMwQixRQURqQztBQUVELENBTEQ7O0FBT0FYLG1EQUFPLENBQUNDLFVBQVIsQ0FBbUIsa0JBQW5CLElBQXlDLFVBQVNDLEtBQVQsRUFBZ0I7QUFDdkQsU0FBTyx3QkFBd0JBLEtBQUssQ0FBQ1MsRUFBOUIsR0FBbUMsUUFBMUM7QUFDRCxDQUZEOztBQUlBWCxtREFBTyxDQUFDQyxVQUFSLENBQW1CLFlBQW5CLElBQW1DLFVBQVNDLEtBQVQsRUFBZ0I7QUFDakQsU0FBTyxVQUFVUSxNQUFNLENBQUNSLEtBQUssQ0FBQ0csYUFBTixDQUFvQixVQUFwQixDQUFELENBQWhCLEdBQ0gsZUFERyxHQUNlSCxLQUFLLENBQUNTLEVBRHJCLEdBQzBCLFFBRGpDO0FBRUQsQ0FIRDs7QUFLQVgsbURBQU8sQ0FBQ0MsVUFBUixDQUFtQixrQkFBbkIsSUFBeUMsVUFBU0MsS0FBVCxFQUFnQjtBQUN2RCxNQUFNVSxVQUFVLEdBQ1paLG1EQUFPLENBQUNDLFVBQVIsQ0FBbUJHLE1BQW5CLENBQTBCRixLQUFLLENBQUNHLGFBQU4sQ0FBb0IsWUFBcEIsQ0FBMUIsQ0FESjtBQUVBLFNBQU8sbUJBQW1CTyxVQUFuQixHQUFnQyxlQUFoQyxHQUFrRFYsS0FBSyxDQUFDUyxFQUF4RCxHQUE2RCxRQUFwRTtBQUNELENBSkQ7O0FBTUFYLG1EQUFPLENBQUNDLFVBQVIsQ0FBbUIsYUFBbkIsSUFBb0MsVUFBU0MsS0FBVCxFQUFnQjtBQUNsRCxNQUFNVyxlQUFlLEdBQUdiLG1EQUFPLENBQUNDLFVBQVIsQ0FBbUJhLGVBQW5CLENBQW1DWixLQUFuQyxFQUEwQyxPQUExQyxDQUF4QjtBQUNBLE1BQU1DLElBQUksR0FBRyx5QkFDWFUsZUFEVyxHQUNPLEtBRHBCLENBRmtELENBSWxEOztBQUNBYixxREFBTyxDQUFDQyxVQUFSLENBQW1CYyxZQUFuQixDQUFnQyxRQUFoQyxJQUE0Q1osSUFBNUM7QUFDQSxTQUFPLElBQVA7QUFDRCxDQVBEIiwiZmlsZSI6Ii4vc3JjL211c2ljX2Jsb2NrX2dlbmVyYXRvcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbi8qKlxuICogQGZpbGVvdmVydmlldyBKYXZhU2NyaXB0IGdlbmVyYXRvcnMgZm9yIG11c2ljIGJsb2Nrcy5cbiAqL1xuXG5pbXBvcnQgQmxvY2tseSBmcm9tICdibG9ja2x5L2NvcmUnO1xuXG5CbG9ja2x5LkphdmFTY3JpcHRbJ211c2ljX3BpdGNoJ10gPSBmdW5jdGlvbihibG9jaykge1xuICBjb25zdCBjb2RlID0gQmxvY2tseS5KYXZhU2NyaXB0LnF1b3RlXyhibG9jay5nZXRGaWVsZFZhbHVlKCdQSVRDSCcpKTtcbiAgcmV0dXJuIFtjb2RlLCBCbG9ja2x5LkphdmFTY3JpcHQuT1JERVJfQVRPTUlDXTtcbn07XG5cbkJsb2NrbHkuSmF2YVNjcmlwdFsnbXVzaWNfbm90ZSddID0gZnVuY3Rpb24oYmxvY2spIHtcbiAgY29uc3QgcGl0Y2ggPSBCbG9ja2x5LkphdmFTY3JpcHQudmFsdWVUb0NvZGUoYmxvY2ssICdQSVRDSCcsXG4gICAgICBCbG9ja2x5LkphdmFTY3JpcHQuT1JERVJfTk9ORSkgfHwgJ0M0JztcbiAgcmV0dXJuICdwbGF5KCcgKyBOdW1iZXIoYmxvY2suZ2V0RmllbGRWYWx1ZSgnRFVSQVRJT04nKSkgKyAnLCAnICsgcGl0Y2ggK1xuICAgICAgJywgXFwnYmxvY2tfaWRfJyArIGJsb2NrLmlkICsgJ1xcJyk7XFxuJztcbn07XG5cbkJsb2NrbHkuSmF2YVNjcmlwdFsnbXVzaWNfcmVzdF93aG9sZSddID0gZnVuY3Rpb24oYmxvY2spIHtcbiAgcmV0dXJuICdyZXN0KDEsIFxcJ2Jsb2NrX2lkXycgKyBibG9jay5pZCArICdcXCcpO1xcbic7XG59O1xuXG5CbG9ja2x5LkphdmFTY3JpcHRbJ211c2ljX3Jlc3QnXSA9IGZ1bmN0aW9uKGJsb2NrKSB7XG4gIHJldHVybiAncmVzdCgnICsgTnVtYmVyKGJsb2NrLmdldEZpZWxkVmFsdWUoJ0RVUkFUSU9OJykpICtcbiAgICAgICcsIFxcJ2Jsb2NrX2lkXycgKyBibG9jay5pZCArICdcXCcpO1xcbic7XG59O1xuXG5CbG9ja2x5LkphdmFTY3JpcHRbJ211c2ljX2luc3RydW1lbnQnXSA9IGZ1bmN0aW9uKGJsb2NrKSB7XG4gIGNvbnN0IGluc3RydW1lbnQgPVxuICAgICAgQmxvY2tseS5KYXZhU2NyaXB0LnF1b3RlXyhibG9jay5nZXRGaWVsZFZhbHVlKCdJTlNUUlVNRU5UJykpO1xuICByZXR1cm4gJ3NldEluc3RydW1lbnQoJyArIGluc3RydW1lbnQgKyAnLCBcXCdibG9ja19pZF8nICsgYmxvY2suaWQgKyAnXFwnKTtcXG4nO1xufTtcblxuQmxvY2tseS5KYXZhU2NyaXB0WydtdXNpY19zdGFydCddID0gZnVuY3Rpb24oYmxvY2spIHtcbiAgY29uc3Qgc3RhdGVtZW50c1N0YWNrID0gQmxvY2tseS5KYXZhU2NyaXB0LnN0YXRlbWVudFRvQ29kZShibG9jaywgJ1NUQUNLJyk7XG4gIGNvbnN0IGNvZGUgPSAnZnVuY3Rpb24gc3RhcnQoKSB7XFxuJyArXG4gICAgc3RhdGVtZW50c1N0YWNrICsgJ31cXG4nO1xuICAvLyBBZGQgJSBzbyBhcyBub3QgdG8gY29sbGlkZSB3aXRoIGhlbHBlciBmdW5jdGlvbnMgaW4gZGVmaW5pdGlvbnMgbGlzdC5cbiAgQmxvY2tseS5KYXZhU2NyaXB0LmRlZmluaXRpb25zX1snJXN0YXJ0J10gPSBjb2RlO1xuICByZXR1cm4gbnVsbDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/music_block_generators.js\n");

/***/ }),

/***/ "./src/music_blocks.js":
/*!*****************************!*\
  !*** ./src/music_blocks.js ***!
  \*****************************/
/*! exports provided: toolboxPitch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toolboxPitch\", function() { return toolboxPitch; });\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! blockly/core */ \"./node_modules/blockly/dist/core-browser.js\");\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(blockly_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _field_pitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./field_pitch */ \"./src/field_pitch.js\");\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Blocks for the accessible music demo.\n */\n\n\nvar mediaPrefix = 'https://raw.githubusercontent.com/google/blockly-games/master/appengine/';\n/* eslint-disable quotes */\n\nblockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.defineBlocksWithJsonArray([{\n  \"type\": \"pitch_test\",\n  \"message0\": 'pitch test: %1',\n  \"args0\": [{\n    \"type\": \"field_pitch\",\n    \"name\": \"PITCH\"\n  }],\n  \"output\": null,\n  \"colour\": 160\n}, {\n  \"type\": \"music_pitch\",\n  \"message0\": \"%1\",\n  \"args0\": [{\n    \"type\": \"field_pitch\",\n    \"name\": \"PITCH\"\n  }],\n  \"output\": \"String\",\n  \"colourPrimary\": 160\n}, {\n  \"type\": \"music_note\",\n  \"message0\": 'Music_playNote %1 %2',\n  \"args0\": [{\n    \"type\": \"field_dropdown\",\n    \"name\": \"DURATION\",\n    \"options\": [[{\n      \"src\": mediaPrefix + \"music/note1.png\",\n      \"width\": 9,\n      \"height\": 19,\n      \"alt\": \"whole\"\n    }, \"1\"], [{\n      \"src\": mediaPrefix + \"music/note0.5.png\",\n      \"width\": 9,\n      \"height\": 19,\n      \"alt\": \"half\"\n    }, \"0.5\"], [{\n      \"src\": mediaPrefix + \"music/note0.25.png\",\n      \"width\": 9,\n      \"height\": 19,\n      \"alt\": \"quarter\"\n    }, \"0.25\"], [{\n      \"src\": mediaPrefix + \"music/note0.125.png\",\n      \"width\": 9,\n      \"height\": 19,\n      \"alt\": \"eighth\"\n    }, \"0.125\"], [{\n      \"src\": mediaPrefix + \"music/note0.0625.png\",\n      \"width\": 9,\n      \"height\": 19,\n      \"alt\": \"sixteenth\"\n    }, \"0.0625\"]]\n  }, {\n    \"type\": \"input_value\",\n    \"name\": \"PITCH\",\n    \"check\": \"String\"\n  }],\n  \"inputsInline\": true,\n  \"previousStatement\": null,\n  \"nextStatement\": null,\n  \"colour\": 160,\n  \"tooltip\": 'Music_playNoteTooltip'\n}, {\n  \"type\": \"music_rest_whole\",\n  \"message0\": 'Music_rest %1',\n  \"args0\": [{\n    \"type\": \"field_image\",\n    \"src\": mediaPrefix + \"music/rest1.png\",\n    \"width\": 10,\n    \"height\": 20,\n    \"alt\": \"-\"\n  }],\n  \"inputsInline\": true,\n  \"previousStatement\": null,\n  \"nextStatement\": null,\n  \"colour\": 160,\n  \"tooltip\": 'Music_restWholeTooltip'\n}, {\n  \"type\": \"music_rest\",\n  \"message0\": 'Music_rest %1',\n  \"args0\": [{\n    \"type\": \"field_dropdown\",\n    \"name\": \"DURATION\",\n    \"options\": [[{\n      \"src\": mediaPrefix + \"music/rest1.png\",\n      \"width\": 10,\n      \"height\": 20,\n      \"alt\": \"whole\"\n    }, \"1\"], [{\n      \"src\": mediaPrefix + \"music/rest0.5.png\",\n      \"width\": 10,\n      \"height\": 20,\n      \"alt\": \"half\"\n    }, \"0.5\"], [{\n      \"src\": mediaPrefix + \"music/rest0.25.png\",\n      \"width\": 10,\n      \"height\": 20,\n      \"alt\": \"quarter\"\n    }, \"0.25\"], [{\n      \"src\": mediaPrefix + \"music/rest0.125.png\",\n      \"width\": 10,\n      \"height\": 20,\n      \"alt\": \"eighth\"\n    }, \"0.125\"], [{\n      \"src\": mediaPrefix + \"music/rest0.0625.png\",\n      \"width\": 10,\n      \"height\": 20,\n      \"alt\": \"sixteenth\"\n    }, \"0.0625\"]]\n  }],\n  \"inputsInline\": true,\n  \"previousStatement\": null,\n  \"nextStatement\": null,\n  \"colour\": 160,\n  \"tooltip\": 'Music_restTooltip'\n}, {\n  \"type\": \"music_instrument\",\n  \"message0\": 'Music_setInstrument %1',\n  \"args0\": [{\n    \"type\": \"field_dropdown\",\n    \"name\": \"INSTRUMENT\",\n    \"options\": [['Music_piano', \"piano\"], ['Music_trumpet', \"trumpet\"], ['Music_banjo', \"banjo\"], ['Music_violin', \"violin\"], ['Music_guitar', \"guitar\"], ['Music_flute', \"flute\"], ['Music_drum', \"drum\"], ['Music_choir', \"choir\"]]\n  }],\n  \"inputsInline\": true,\n  \"previousStatement\": null,\n  \"nextStatement\": null,\n  \"colour\": 160,\n  \"tooltip\": 'Music_setInstrumentTooltip'\n}, {\n  \"type\": \"music_start\",\n  \"message0\": 'Music_start %1',\n  \"args0\": [{\n    \"type\": \"field_image\",\n    \"src\": mediaPrefix + \"music/play.png\",\n    \"width\": 17,\n    \"height\": 17,\n    \"alt\": \"▶\"\n  }],\n  \"message1\": \"%1\",\n  \"args1\": [{\n    \"type\": \"input_statement\",\n    \"name\": \"STACK\"\n  }],\n  \"colour\": 0,\n  \"tooltip\": 'Music_startTooltip'\n}]);\nvar toolboxPitch = {\n  \"kind\": \"flyoutToolbox\",\n  \"contents\": [{\n    \"kind\": \"block\",\n    \"type\": \"pitch_test\"\n  }, {\n    \"kind\": \"block\",\n    \"type\": \"music_pitch\"\n  }, {\n    \"kind\": \"block\",\n    \"type\": \"music_note\"\n  }, {\n    \"kind\": \"block\",\n    \"type\": \"music_rest_whole\"\n  }, {\n    \"kind\": \"block\",\n    \"type\": \"music_rest\"\n  }, {\n    \"kind\": \"block\",\n    \"type\": \"music_instrument\"\n  }, {\n    \"kind\": \"block\",\n    \"type\": \"music_start\"\n  }]\n};\n/* eslint-enable quotes *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/music_blocks.js\n");

/***/ }),

/***/ "./src/note_player.js":
/*!****************************!*\
  !*** ./src/note_player.js ***!
  \****************************/
/*! exports provided: NotePlayer, notePlayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NotePlayer\", function() { return NotePlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notePlayer\", function() { return notePlayer; });\n/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tone */ \"./node_modules/tone/build/esm/index.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Wrapper class for Tone.js.\n */\n\n/**\n * Wrapper class for Tone.js.\n * More information on tone.js can be found here:\n * https://tonejs.github.io/.\n */\n\nvar NotePlayer = /*#__PURE__*/function () {\n  /**\n   * Constructor for a class that plays notes.\n   */\n  function NotePlayer() {\n    _classCallCheck(this, NotePlayer);\n\n    this.synth = new tone__WEBPACK_IMPORTED_MODULE_0__[\"Synth\"]().toDestination();\n  }\n  /**\n   * Plays the given note for the given duration.\n   * @param {string} note The note to play.\n   * @param {string} duration The duration of the note (ex: 8n, 4n, 2n).\n   */\n\n\n  _createClass(NotePlayer, [{\n    key: \"playNote\",\n    value: function playNote(note, duration) {\n      this.synth.triggerAttackRelease(note, duration);\n    }\n    /**\n     * Triggers attack for specified note.\n     * @param {string} note The note to start.\n     */\n\n  }, {\n    key: \"triggerAttack\",\n    value: function triggerAttack(note) {\n      this.synth.triggerAttack(note, tone__WEBPACK_IMPORTED_MODULE_0__[\"now\"]());\n    }\n    /**\n     * Triggers release of note.\n     */\n\n  }, {\n    key: \"triggerRelease\",\n    value: function triggerRelease() {\n      this.synth.triggerRelease(tone__WEBPACK_IMPORTED_MODULE_0__[\"now\"]());\n    }\n  }]);\n\n  return NotePlayer;\n}();\nvar notePlayer = new NotePlayer();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbm90ZV9wbGF5ZXIuanM/OGM1NCJdLCJuYW1lcyI6WyJOb3RlUGxheWVyIiwic3ludGgiLCJUb25lIiwidG9EZXN0aW5hdGlvbiIsIm5vdGUiLCJkdXJhdGlvbiIsInRyaWdnZXJBdHRhY2tSZWxlYXNlIiwidHJpZ2dlckF0dGFjayIsInRyaWdnZXJSZWxlYXNlIiwibm90ZVBsYXllciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNPLElBQU1BLFVBQWI7QUFDRTtBQUNGO0FBQ0E7QUFDRSx3QkFBYztBQUFBOztBQUNaLFNBQUtDLEtBQUwsR0FBYSxJQUFJQywwQ0FBSixHQUFpQkMsYUFBakIsRUFBYjtBQUNEO0FBRUQ7QUFDRjtBQUNBO0FBQ0E7QUFDQTs7O0FBWkE7QUFBQTtBQUFBLDZCQWFXQyxJQWJYLEVBYWlCQyxRQWJqQixFQWEyQjtBQUN2QixXQUFLSixLQUFMLENBQVdLLG9CQUFYLENBQWdDRixJQUFoQyxFQUFzQ0MsUUFBdEM7QUFDRDtBQUVEO0FBQ0Y7QUFDQTtBQUNBOztBQXBCQTtBQUFBO0FBQUEsa0NBcUJnQkQsSUFyQmhCLEVBcUJzQjtBQUNsQixXQUFLSCxLQUFMLENBQVdNLGFBQVgsQ0FBeUJILElBQXpCLEVBQStCRix3Q0FBQSxFQUEvQjtBQUNEO0FBQ0Q7QUFDRjtBQUNBOztBQTFCQTtBQUFBO0FBQUEscUNBMkJtQjtBQUNmLFdBQUtELEtBQUwsQ0FBV08sY0FBWCxDQUEwQk4sd0NBQUEsRUFBMUI7QUFDRDtBQTdCSDs7QUFBQTtBQUFBO0FBZ0NPLElBQU1PLFVBQVUsR0FBRyxJQUFJVCxVQUFKLEVBQW5CIiwiZmlsZSI6Ii4vc3JjL25vdGVfcGxheWVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5cbi8qKlxuICogQGZpbGVvdmVydmlldyBXcmFwcGVyIGNsYXNzIGZvciBUb25lLmpzLlxuICovXG5cbmltcG9ydCAqIGFzIFRvbmUgZnJvbSAndG9uZSc7XG5cbi8qKlxuICogV3JhcHBlciBjbGFzcyBmb3IgVG9uZS5qcy5cbiAqIE1vcmUgaW5mb3JtYXRpb24gb24gdG9uZS5qcyBjYW4gYmUgZm91bmQgaGVyZTpcbiAqIGh0dHBzOi8vdG9uZWpzLmdpdGh1Yi5pby8uXG4gKi9cbmV4cG9ydCBjbGFzcyBOb3RlUGxheWVyIHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yIGZvciBhIGNsYXNzIHRoYXQgcGxheXMgbm90ZXMuXG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnN5bnRoID0gbmV3IFRvbmUuU3ludGgoKS50b0Rlc3RpbmF0aW9uKCk7XG4gIH1cblxuICAvKipcbiAgICogUGxheXMgdGhlIGdpdmVuIG5vdGUgZm9yIHRoZSBnaXZlbiBkdXJhdGlvbi5cbiAgICogQHBhcmFtIHtzdHJpbmd9IG5vdGUgVGhlIG5vdGUgdG8gcGxheS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IGR1cmF0aW9uIFRoZSBkdXJhdGlvbiBvZiB0aGUgbm90ZSAoZXg6IDhuLCA0biwgMm4pLlxuICAgKi9cbiAgcGxheU5vdGUobm90ZSwgZHVyYXRpb24pIHtcbiAgICB0aGlzLnN5bnRoLnRyaWdnZXJBdHRhY2tSZWxlYXNlKG5vdGUsIGR1cmF0aW9uKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUcmlnZ2VycyBhdHRhY2sgZm9yIHNwZWNpZmllZCBub3RlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbm90ZSBUaGUgbm90ZSB0byBzdGFydC5cbiAgICovXG4gIHRyaWdnZXJBdHRhY2sobm90ZSkge1xuICAgIHRoaXMuc3ludGgudHJpZ2dlckF0dGFjayhub3RlLCBUb25lLm5vdygpKTtcbiAgfVxuICAvKipcbiAgICogVHJpZ2dlcnMgcmVsZWFzZSBvZiBub3RlLlxuICAgKi9cbiAgdHJpZ2dlclJlbGVhc2UoKSB7XG4gICAgdGhpcy5zeW50aC50cmlnZ2VyUmVsZWFzZShUb25lLm5vdygpKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3Qgbm90ZVBsYXllciA9IG5ldyBOb3RlUGxheWVyKCk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/note_player.js\n");

/***/ }),

/***/ "./test/index.js":
/*!***********************!*\
  !*** ./test/index.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! blockly/core */ \"./node_modules/blockly/dist/core-browser.js\");\n/* harmony import */ var blockly_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(blockly_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_speaker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/speaker */ \"./src/speaker.js\");\n/* harmony import */ var _src_note_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/note_player */ \"./src/note_player.js\");\n/* harmony import */ var _src_music_game_controller__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/music_game_controller */ \"./src/music_game_controller.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Plugin test.\n */\n\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var controller = new _src_music_game_controller__WEBPACK_IMPORTED_MODULE_3__[\"MusicGameController\"]();\n  document.getElementById('setLevel').addEventListener('input', function (event) {\n    controller.getGame().loadLevel(this.value);\n  });\n  document.getElementById('logGeneratedCode').addEventListener('click', function (event) {\n    controller.getGame().logGeneratedCode();\n  });\n  document.getElementById('executeCode').addEventListener('click', function (event) {\n    controller.getGame().execute();\n  });\n  document.getElementById('speedSlider').addEventListener('input', function (event) {\n    controller.getGame().setSpeed(this.value / 100);\n  }); // Initial state has arrow keys turned on.\n\n  registerArrowKeys(true);\n  addTestButtons();\n});\n/**\n * Add buttons for testing basic functionality (speaker, etc).\n */\n\nfunction addTestButtons() {\n  document.getElementById('playNote').addEventListener('click', function () {\n    _src_note_player__WEBPACK_IMPORTED_MODULE_2__[\"notePlayer\"].playNote('C4', '8n');\n  });\n  document.getElementById('playText').addEventListener('click', function () {\n    var textContent = document.getElementById('textInput').value;\n    _src_speaker__WEBPACK_IMPORTED_MODULE_1__[\"speaker\"].speak(textContent);\n  });\n  document.getElementById('playNoteAndText').addEventListener('click', function () {\n    _src_speaker__WEBPACK_IMPORTED_MODULE_1__[\"speaker\"].speak('C4', false, function () {\n      _src_note_player__WEBPACK_IMPORTED_MODULE_2__[\"notePlayer\"].playNote('C4', '8n');\n    });\n  });\n  document.addEventListener('visibilitychange', function (event) {\n    if (document.visibilityState === 'visible') {\n      console.log('tab is activate');\n    } else {\n      _src_speaker__WEBPACK_IMPORTED_MODULE_1__[\"speaker\"].cancel();\n    }\n  });\n  document.getElementById('enableArrowKeys').addEventListener('click', function (event) {\n    registerArrowKeys(event.currentTarget.checked);\n  });\n  document.getElementById('modalButton').addEventListener('click', function () {\n    _src_speaker__WEBPACK_IMPORTED_MODULE_1__[\"speaker\"].modalToText(document.getElementById('modal-1'));\n  });\n  document.getElementById('modalButton').addEventListener('focus', function (e) {\n    _src_speaker__WEBPACK_IMPORTED_MODULE_1__[\"speaker\"].speak('Hit enter to open the help menu');\n  });\n  document.getElementById('replayButton').addEventListener('click', function () {\n    _src_speaker__WEBPACK_IMPORTED_MODULE_1__[\"speaker\"].modalToText(document.getElementById('modal-1'));\n  });\n}\n/**\n * Register the arrow keys to do keyboard navigation actions.\n * @param {boolean} register True if the arrow keys should be used for nav.\n */\n\n\nfunction registerArrowKeys(register) {\n  var keyCodeMappings = [[blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.utils.KeyCodes.UP, blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.navigation.actionNames.PREVIOUS], [blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.utils.KeyCodes.DOWN, blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.navigation.actionNames.NEXT], [blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.utils.KeyCodes.RIGHT, blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.navigation.actionNames.IN], [blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.utils.KeyCodes.LEFT, blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.navigation.actionNames.OUT]];\n  keyCodeMappings.forEach(function (mapping) {\n    if (register) {\n      var _Blockly$ShortcutRegi;\n\n      (_Blockly$ShortcutRegi = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.ShortcutRegistry.registry).addKeyMapping.apply(_Blockly$ShortcutRegi, _toConsumableArray(mapping));\n    } else {\n      var _Blockly$ShortcutRegi2;\n\n      (_Blockly$ShortcutRegi2 = blockly_core__WEBPACK_IMPORTED_MODULE_0___default.a.ShortcutRegistry.registry).removeKeyMapping.apply(_Blockly$ShortcutRegi2, _toConsumableArray(mapping));\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./test/index.js\n");

/***/ })

})